import numpy as np

# Define the dimensions of the board
ROWS = 6
COLS = 7

# Define the board
board = np.zeros((ROWS, COLS), dtype=int)

# Define functions to manipulate the board
def drop_piece(board, row, col, piece):
   board[row][col] = piece

def is_col_full(board, col):
   return board[0][col] != 0

def get_next_row(board, col):
   for r in range(ROWS-1):
       if board[r+1][col] != 0:
           return r
   return ROWS-1

def is_winner(board, piece):
   # Check rows
   for r in range(ROWS):
       for c in range(COLS-3):
           if board[r][c] == piece and board[r][c+1] == piece and board[r][c+2] == piece and board[r][c+3] == piece:
               return True

   # Check columns
   for r in range(ROWS-3):
       for c in range(COLS):
           if board[r][c] == piece and board[r+1][c] == piece and board[r+2][c] == piece and board[r+3][c] == piece:
               return True

   # Check diagonal (up-right)
   for r in range(ROWS-3):
       for c in range(COLS-3):
           if board[r][c] == piece and board[r+1][c+1] == piece and board[r+2][c+2] == piece and board[r+3][c+3] == piece:
               return True

   # Check diagonal (up-left)
   for r in range(ROWS-3):
       for c in range(3, COLS):
           if board[r][c] == piece and board[r+1][c-1] == piece and board[r+2][c-2] == piece and board[r+3][c-3] == piece:
               return True

   return False

def print_board(board):
   # Define the Unicode characters for the game board
   board_chars = {
       0: '‚ö™Ô∏è',  # empty slot
       1: 'üî¥',  # player 1
       2: 'üü°'   # player 2
   }

   # Print the game board
   for r in range(ROWS):
       for c in range(COLS):
           print(board_chars[board[r][c]], end=' ')
       print()

   # Print the column numbers
   print('1  2  3  4  5  6  7')


# Get player names
player1_name = input("Enter Player 1 username: ")
player2_name = input("Enter Player 2 username: ")

# Initialize the current player to 1
current_player = 1

# Loop until the game is over
while True:
   # Get the player's move
   col = int(input(f"{player1_name if current_player == 1 else player2_name}, enter a column (1-{COLS}): "))
   row = get_next_row(board, col-1)

   # Check if the column is full
   if is_col_full(board, col-1):
       print("Column is full, try again.")
       continue

   # Check if the row is valid
   if row < 0 or row >= ROWS:
       print("Invalid row, try again.")
       continue

       # Drop the piece
   drop_piece(board, row, col-1, current_player)

   # Print the board
   print_board(board)

   # Check if the game is over
   if is_winner(board, current_player):
       print(f"{player1_name if current_player == 1 else player2_name} wins!")
       break
   elif np.count_nonzero(board) == ROWS * COLS:
       print("Game over. It's a tie!")
       break

   # Switch to the other player
   current_player = 3 - current_player  # Alternate between players 1 and 2

print("Thanks for playing!")
